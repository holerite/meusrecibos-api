generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Company {
  id                Int                 @id @default(autoincrement())
  name              String
  Users             User[]
  Receipts          Receipts[]
  ReceiptsTypes     ReceiptsTypes[]
  EmployeeEnrolment EmployeeEnrolment[]
}

model User {
  id                       Int       @id @default(autoincrement())
  name                     String
  email                    String    @unique
  refresh_token            String?
  refresh_token_expires_at DateTime?
  createdAt                DateTime  @default(now())
  updatedAt                DateTime  @default(now())
  Pin                      Pin?
  Companies                Company[]
}

model Employee {
  id                Int                 @id @default(autoincrement())
  email             String              @unique
  name              String
  cpf               String              @unique
  Receipts          Receipts[]
  EmployeeEnrolment EmployeeEnrolment[]
}

model EmployeeEnrolment {
  id         Int      @id @default(autoincrement())
  enrolment  String
  employee   Employee @relation(fields: [employeeId], references: [id], onDelete: Cascade)
  employeeId Int
  companyId  Int
  company    Company  @relation(fields: [companyId], references: [id], onDelete: Cascade)
}

model Receipts {
  id              Int           @id @default(autoincrement())
  opened          Boolean       @default(false)
  payday          DateTime?
  validity        DateTime?
  employee        Employee      @relation(fields: [employeeId], references: [id])
  employeeId      Int
  company         Company       @relation(fields: [companyId], references: [id])
  companyId       Int
  type            ReceiptsTypes @relation(fields: [receiptsTypesId], references: [id])
  receiptsTypesId String
}

model ReceiptsTypes {
  id        String     @id @default(uuid())
  name      String
  company   Company    @relation(fields: [companyId], references: [id])
  companyId Int
  Receipts  Receipts[]
}

model Pin {
  id     String @id @default(uuid())
  user   User   @relation(fields: [userId], references: [id])
  userId Int    @unique
  pin    String
}

model SystemRoutes {
  id     Int     @id @default(autoincrement())
  name   String
  route  String
  active Boolean
}
